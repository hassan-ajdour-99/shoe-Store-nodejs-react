{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_CATEGORY_REQUEST, PRODUCT_CATEGORY_SUCCESS, PRODUCT_CATEGORY_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_ADD_REVIEW_REQUEST, PRODUCT_ADD_REVIEW_SUCCESS, PRODUCT_ADD_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from \"../Constants/productConstant\";\nimport axios from \"axios\";\nexport const createNewProductAction = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    }); // Get user info\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/products\", {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const listProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let pageNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  return async dispatch => {\n    try {\n      dispatch({\n        type: PRODUCT_LIST_REQUEST\n      });\n      const {\n        data\n      } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`);\n      dispatch({\n        type: PRODUCT_LIST_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_LIST_FAIL,\n        payload: error.response && error.response.data.message ? error.response.data.message : error.response\n      });\n    }\n  };\n}; // Product details\n\nexport const productActionDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n}; // Product delete\n\nexport const deleteProductAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    }); // Get user info\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const updateProductAction = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    }); // Get user info\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const productCreateReviewAction = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_ADD_REVIEW_REQUEST\n    }); // Get user info\n\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_ADD_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_ADD_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};\nexport const topProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/top`);\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n}; // Product Category API\n\nexport const getProductCategory = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_CATEGORY_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/category`);\n    dispatch({\n      type: PRODUCT_CATEGORY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CATEGORY_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.response\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/hassan/Desktop/mystore/front-end/src/components/Actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_CATEGORY_REQUEST","PRODUCT_CATEGORY_SUCCESS","PRODUCT_CATEGORY_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_ADD_REVIEW_REQUEST","PRODUCT_ADD_REVIEW_SUCCESS","PRODUCT_ADD_REVIEW_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","axios","createNewProductAction","dispatch","getState","type","userLogin","userInfo","config","headers","authorization","token","data","post","payload","error","response","message","listProducts","keyword","pageNumber","get","productActionDetails","id","deleteProductAction","delete","updateProductAction","product","put","_id","productCreateReviewAction","productId","review","topProducts","getProductCategory"],"mappings":"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","sourcesContent":["import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_CATEGORY_REQUEST,\r\n  PRODUCT_CATEGORY_SUCCESS,\r\n  PRODUCT_CATEGORY_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_ADD_REVIEW_REQUEST,\r\n  PRODUCT_ADD_REVIEW_SUCCESS,\r\n  PRODUCT_ADD_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n} from \"../Constants/productConstant\";\r\nimport axios from \"axios\";\r\n\r\nexport const createNewProductAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n    // Get user info\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/products\", {}, config);\r\n\r\n    dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProducts =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\r\n        `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.response,\r\n      });\r\n    }\r\n  };\r\n\r\n// Product details\r\nexport const productActionDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Product delete\r\nexport const deleteProductAction = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n    // Get user info\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProductAction = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n    // Get user info\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productCreateReviewAction =\r\n  (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_ADD_REVIEW_REQUEST });\r\n\r\n      // Get user info\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n      dispatch({ type: PRODUCT_ADD_REVIEW_SUCCESS });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_ADD_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.response,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const topProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/top`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n\r\n// Product Category API\r\nexport const getProductCategory = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_CATEGORY_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/category`);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CATEGORY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CATEGORY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}