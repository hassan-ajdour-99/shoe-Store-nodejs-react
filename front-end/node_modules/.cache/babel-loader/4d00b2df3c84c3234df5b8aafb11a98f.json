{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { productListReducer, productCategoryReducer, productDetailReducer, deleteProductReducer, CreateProductReducer, updateProductReducer, productCreateReviewReducer, productTopRatedReducer } from \"../components/Reducers/productReducers\";\nimport { cartReducer } from \"../components/Reducers/cartReducer\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from \"../components/Reducers/userReducer\";\nimport { createOrderReducer, orderDetailsReducer, getAllOrders, AllOrdersAdminReducer, orderUpdatePayment, orderUpdateDelivery, deleteOrderReducer } from \"../components/Reducers/orderReducer\"; // All Reducers States\n\nconst reducer = combineReducers({\n  createdNewProduct: CreateProductReducer,\n  productList: productListReducer,\n  productCategory: productCategoryReducer,\n  productDetails: productDetailReducer,\n  productDelete: deleteProductReducer,\n  updateProduct: updateProductReducer,\n  createProductReview: productCreateReviewReducer,\n  TopRatedProducts: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: createOrderReducer,\n  deleteOrderState: deleteOrderReducer,\n  orderDetails: orderDetailsReducer,\n  orderToPay: orderUpdatePayment,\n  orderToDeliver: orderUpdateDelivery,\n  userOrders: getAllOrders,\n  allOrderList: AllOrdersAdminReducer,\n  allUsers: userListReducer,\n  userDelete: userDeleteReducer\n}); // GET CART ITEMS FROM LOCAL STRORAGE\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : []; // GET CART ITEMS FROM LOCAL STRORAGE\n\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null; // GET Payment Method in local Storage\n\nconst ShippingAddressFromStorage = localStorage.getItem(\"shippingAddress\") ? JSON.parse(localStorage.getItem(\"shippingAddress\")) : {};\nconst PaymentMethodFromStorage = localStorage.getItem(\"paymentMethod\") ? JSON.parse(localStorage.getItem(\"paymentMethod\")) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: ShippingAddressFromStorage,\n    paymentMethod: PaymentMethodFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/mac/Desktop/mystore/front-end/src/Store/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productCategoryReducer","productDetailReducer","deleteProductReducer","CreateProductReducer","updateProductReducer","productCreateReviewReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","createOrderReducer","orderDetailsReducer","getAllOrders","AllOrdersAdminReducer","orderUpdatePayment","orderUpdateDelivery","deleteOrderReducer","reducer","createdNewProduct","productList","productCategory","productDetails","productDelete","updateProduct","createProductReview","TopRatedProducts","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","deleteOrderState","orderDetails","orderToPay","orderToDeliver","userOrders","allOrderList","allUsers","userDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","ShippingAddressFromStorage","PaymentMethodFromStorage","initialState","cartItems","shippingAddress","paymentMethod","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  productListReducer,\r\n  productCategoryReducer,\r\n  productDetailReducer,\r\n  deleteProductReducer,\r\n  CreateProductReducer,\r\n  updateProductReducer,\r\n  productCreateReviewReducer,\r\n  productTopRatedReducer,\r\n} from \"../components/Reducers/productReducers\";\r\nimport { cartReducer } from \"../components/Reducers/cartReducer\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n} from \"../components/Reducers/userReducer\";\r\nimport {\r\n  createOrderReducer,\r\n  orderDetailsReducer,\r\n  getAllOrders,\r\n  AllOrdersAdminReducer,\r\n  orderUpdatePayment,\r\n  orderUpdateDelivery,\r\n  deleteOrderReducer,\r\n} from \"../components/Reducers/orderReducer\";\r\n\r\n// All Reducers States\r\nconst reducer = combineReducers({\r\n  createdNewProduct: CreateProductReducer,\r\n  productList: productListReducer,\r\n  productCategory: productCategoryReducer,\r\n  productDetails: productDetailReducer,\r\n  productDelete: deleteProductReducer,\r\n  updateProduct: updateProductReducer,\r\n  createProductReview: productCreateReviewReducer,\r\n  TopRatedProducts: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  orderCreate: createOrderReducer,\r\n  deleteOrderState: deleteOrderReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderToPay: orderUpdatePayment,\r\n  orderToDeliver: orderUpdateDelivery,\r\n  userOrders: getAllOrders,\r\n  allOrderList: AllOrdersAdminReducer,\r\n  allUsers: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n});\r\n\r\n// GET CART ITEMS FROM LOCAL STRORAGE\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\n// GET CART ITEMS FROM LOCAL STRORAGE\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\n// GET Payment Method in local Storage\r\nconst ShippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst PaymentMethodFromStorage = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: ShippingAddressFromStorage,\r\n    paymentMethod: PaymentMethodFromStorage,\r\n  },\r\n\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}