{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/mystore/front-end/src/components/Product/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport Loader from \"../Layout/loader\";\nimport Message from \"../Layout/message\";\nimport { productActionDetails, updateProductAction } from \"../Actions/productActions\";\nimport classes from \"./UpdateProduct.module.css\";\nimport { PRODUCT_UPDATE_RESET } from \"../Constants/productConstant\";\nimport axios from \"axios\";\nimport Meta from \"../Layout/Meta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateProduct() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(0);\n  const [image, setImage] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const productDetail = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetail;\n  const updateProductState = useSelector(state => state.updateProduct);\n  const {\n    loading: loadingUpdate,\n    error: ErrorUpdate,\n    success: SuccessUpdate\n  } = updateProductState;\n  useEffect(() => {\n    if (SuccessUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      navigate(\"/admin/products\");\n    } else {\n      if (!product.name || product._id !== id) {\n        dispatch(productActionDetails(id));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setImage(product.image);\n        setBrand(product.brand);\n        setCategory(product.category);\n        setDescription(product.description);\n        setCountInStock(product.countInStock);\n      }\n    }\n  }, [SuccessUpdate, dispatch, navigate, product, id]);\n\n  const nameChangeHandler = event => {\n    event.preventDefault();\n    setName(event.target.value);\n  };\n\n  const priceChangeHandler = event => {\n    event.preventDefault();\n    setPrice(event.target.value);\n  };\n\n  const brandChangeHandler = event => {\n    event.preventDefault();\n    setBrand(event.target.value);\n  };\n\n  const categoryChangeHandler = event => {\n    event.preventDefault();\n    setCategory(event.target.value);\n  };\n\n  const descriptionChangeHandler = event => {\n    event.preventDefault();\n    setDescription(event.target.value);\n  };\n\n  const countInStockChangeHandler = event => {\n    event.preventDefault();\n    setCountInStock(event.target.value);\n  };\n\n  const SubmitUpdateProductHandler = event => {\n    event.preventDefault(); // Update Product\n\n    dispatch(updateProductAction({\n      _id: id,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      description,\n      countInStock\n    }));\n  }; // Uploading image Function\n\n\n  const uploadingImageHandler = async e => {\n    // e.preventDefault();\n    const file = e.target.files[0];\n    let formData = new FormData();\n    formData.append(\"image\", file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/upload\", formData, config);\n      setImage(data);\n      setUploading(false);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const categories = [\"category\", \"Headphones\", \"accessories\", \"playstation\", \"keyboard\", \"chair\", \"controls\", \"electric-bicycle\", \"mouses\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \"Admin | Add New Product\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.updateProduct,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.header,\n        children: \"SHOPPY-Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 27\n      }, this), ErrorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        message: ErrorUpdate,\n        style: {\n          background: \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        message: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: SubmitUpdateProductHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            id: \"name\",\n            value: name,\n            placeholder: \"name\",\n            onChange: nameChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Price \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"price\",\n            placeholder: \"price\",\n            value: price,\n            onChange: priceChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"image\",\n            placeholder: \"Choose Image\",\n            value: image,\n            onChange: event => setImage(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image-file\",\n            placeholder: \"Choose Image\",\n            onChange: uploadingImageHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Brand \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            id: \"brand\",\n            value: brand,\n            placeholder: \"brand\",\n            onChange: brandChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Category \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            type: \"select\",\n            defaultValue: category,\n            className: classes.selector,\n            onChange: categoryChangeHandler,\n            required: true,\n            children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: cat,\n              children: cat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Stock \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"name\",\n            id: \"countInStock\",\n            value: countInStock,\n            placeholder: \"countInStock\",\n            onChange: countInStockChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formControl,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Description \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"name\",\n            id: \"description\",\n            value: description,\n            placeholder: \"description\",\n            onChange: descriptionChangeHandler,\n            className: classes.lastChild,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          children: \" Update Product \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProduct, \"uhtFgouG/jOt5d3xvwZNF1KNCAE=\", false, function () {\n  return [useParams, useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/Users/mac/Desktop/mystore/front-end/src/components/Product/UpdateProduct.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","useNavigate","Loader","Message","productActionDetails","updateProductAction","classes","PRODUCT_UPDATE_RESET","axios","Meta","UpdateProduct","id","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","description","setDescription","countInStock","setCountInStock","uploading","setUploading","dispatch","navigate","productDetail","state","productDetails","loading","error","product","updateProductState","updateProduct","loadingUpdate","ErrorUpdate","success","SuccessUpdate","type","_id","nameChangeHandler","event","preventDefault","target","value","priceChangeHandler","brandChangeHandler","categoryChangeHandler","descriptionChangeHandler","countInStockChangeHandler","SubmitUpdateProductHandler","uploadingImageHandler","e","file","files","formData","FormData","append","config","headers","data","post","console","categories","container","header","background","formControl","selector","map","cat","lastChild","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Loader from \"../Layout/loader\";\r\nimport Message from \"../Layout/message\";\r\nimport {\r\n  productActionDetails,\r\n  updateProductAction,\r\n} from \"../Actions/productActions\";\r\nimport classes from \"./UpdateProduct.module.css\";\r\nimport { PRODUCT_UPDATE_RESET } from \"../Constants/productConstant\";\r\nimport axios from \"axios\";\r\nimport Meta from \"../Layout/Meta\";\r\n\r\nfunction UpdateProduct() {\r\n  const { id } = useParams();\r\n  const [name, setName] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const productDetail = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetail;\r\n\r\n  const updateProductState = useSelector((state) => state.updateProduct);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: ErrorUpdate,\r\n    success: SuccessUpdate,\r\n  } = updateProductState;\r\n\r\n  useEffect(() => {\r\n    if (SuccessUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      navigate(\"/admin/products\");\r\n    } else {\r\n      if (!product.name || product._id !== id) {\r\n        dispatch(productActionDetails(id));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setDescription(product.description);\r\n        setCountInStock(product.countInStock);\r\n      }\r\n    }\r\n  }, [SuccessUpdate, dispatch, navigate, product, id]);\r\n\r\n  const nameChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setName(event.target.value);\r\n  };\r\n\r\n  const priceChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const brandChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setBrand(event.target.value);\r\n  };\r\n\r\n  const categoryChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  const descriptionChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const countInStockChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    setCountInStock(event.target.value);\r\n  };\r\n\r\n  const SubmitUpdateProductHandler = (event) => {\r\n    event.preventDefault();\r\n    // Update Product\r\n    dispatch(\r\n      updateProductAction({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  // Uploading image Function\r\n  const uploadingImageHandler = async (e) => {\r\n    // e.preventDefault();\r\n\r\n    const file = e.target.files[0];\r\n    let formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config);\r\n      setImage(data);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const categories = [\r\n    \"category\",\r\n    \"Headphones\",\r\n    \"accessories\",\r\n    \"playstation\",\r\n    \"keyboard\",\r\n    \"chair\",\r\n    \"controls\",\r\n    \"electric-bicycle\",\r\n    \"mouses\",\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Meta title=\"Admin | Add New Product\" />\r\n      <div className={classes.updateProduct}>\r\n        <h2 className={classes.header}>SHOPPY-Games</h2>\r\n        {loadingUpdate && <Loader />}\r\n        {ErrorUpdate && (\r\n          <Message message={ErrorUpdate} style={{ background: \"red\" }} />\r\n        )}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message message={error} />\r\n        ) : (\r\n          <form onSubmit={SubmitUpdateProductHandler}>\r\n            <div className={classes.formControl}>\r\n              <label> Name </label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"name\"\r\n                value={name}\r\n                placeholder=\"name\"\r\n                onChange={nameChangeHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Price </label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"price\"\r\n                placeholder=\"price\"\r\n                value={price}\r\n                onChange={priceChangeHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Image </label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"image\"\r\n                placeholder=\"Choose Image\"\r\n                value={image}\r\n                onChange={(event) => setImage(event.target.value)}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                id=\"image-file\"\r\n                placeholder=\"Choose Image\"\r\n                onChange={uploadingImageHandler}\r\n              />\r\n              {uploading && <Loader />}\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Brand </label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"brand\"\r\n                value={brand}\r\n                placeholder=\"brand\"\r\n                onChange={brandChangeHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Category </label>\r\n              <select\r\n                type=\"select\"\r\n                defaultValue={category}\r\n                className={classes.selector}\r\n                onChange={categoryChangeHandler}\r\n                required\r\n              >\r\n                {categories.map((cat) => (\r\n                  <option value={cat}>{cat}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Stock </label>\r\n              <input\r\n                type=\"name\"\r\n                id=\"countInStock\"\r\n                value={countInStock}\r\n                placeholder=\"countInStock\"\r\n                onChange={countInStockChangeHandler}\r\n              />\r\n            </div>\r\n            <div className={classes.formControl}>\r\n              <label> Description </label>\r\n              <textarea\r\n                type=\"name\"\r\n                id=\"description\"\r\n                value={description}\r\n                placeholder=\"description\"\r\n                onChange={descriptionChangeHandler}\r\n                className={classes.lastChild}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <button className={classes.button}> Update Product </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateProduct;\r\n"]},"metadata":{},"sourceType":"module"}