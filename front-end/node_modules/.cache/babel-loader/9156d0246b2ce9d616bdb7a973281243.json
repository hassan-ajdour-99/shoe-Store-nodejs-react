{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hassan\\\\Desktop\\\\mystore\\\\front-end\\\\src\\\\components\\\\User\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAllUsersAction, userDeleteAction } from \"../Actions/userActions\";\nimport Loader from \"../Layout/loader\";\nimport Message from \"../Layout/message\";\nimport classes from \"./Users.module.css\";\nimport Meta from \"../Layout/Meta\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Users() {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const userList = useSelector(state => state.allUsers);\n  const {\n    loading,\n    error,\n    users\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(getAllUsersAction());\n    } else {\n      navigate(\"/login\");\n    }\n  }, [dispatch, navigate, userInfo]);\n\n  function userDeleteHandler(id) {\n    if (window.confirm(\"Are you sure you want to delete user?\")) {\n      dispatch(userDeleteAction(id));\n    }\n  }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    message: error,\n    style: {\n      background: \"red\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: \" Admin | Users Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: classes.users,\n      children: \" All USERS \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" ID \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" NAME \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" EMAIL \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" ADMIN \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" REMOVE \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", user._id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", user.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\" \", user.email, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-check\",\n              style: {\n                color: \"green\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-times\",\n              style: {\n                color: \"red\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.button2,\n              onClick: () => userDeleteHandler(user._id),\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, user._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Users, \"BfBlAUVmUZe2crwiSpuGzkOC6sg=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["C:/Users/hassan/Desktop/mystore/front-end/src/components/User/Users.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","useNavigate","Link","useLocation","getAllUsersAction","userDeleteAction","Loader","Message","classes","Meta","Users","dispatch","navigate","userList","state","allUsers","loading","error","users","userLogin","userInfo","userDelete","success","successDelete","isAdmin","userDeleteHandler","id","window","confirm","background","container","table","map","user","_id","name","email","color","button2"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getAllUsersAction, userDeleteAction } from \"../Actions/userActions\";\r\nimport Loader from \"../Layout/loader\";\r\nimport Message from \"../Layout/message\";\r\nimport classes from \"./Users.module.css\";\r\nimport Meta from \"../Layout/Meta\";\r\n\r\nfunction Users() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const userList = useSelector((state) => state.allUsers);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(getAllUsersAction());\r\n    } else {\r\n      navigate(\"/login\");\r\n    }\r\n  }, [dispatch, navigate, userInfo]);\r\n\r\n  function userDeleteHandler(id) {\r\n    if (window.confirm(\"Are you sure you want to delete user?\")) {\r\n      dispatch(userDeleteAction(id));\r\n    }\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message message={error} style={{ background: \"red\" }} />\r\n  ) : (\r\n    <div className={classes.container}>\r\n      <Meta title=\" Admin | Users Dashboard\" />\r\n      <h3 className={classes.users}> All USERS </h3>\r\n      <table className={classes.table}>\r\n        <thead>\r\n          <tr>\r\n            <th> ID </th>\r\n            <th> NAME </th>\r\n            <th> EMAIL </th>\r\n            <th> ADMIN </th>\r\n            <th> REMOVE </th>\r\n          </tr>\r\n        </thead>\r\n        {users.map((user) => (\r\n          <tbody key={user._id}>\r\n            <tr>\r\n              <td> {user._id} </td>\r\n              <td> {user.name} </td>\r\n              <td> {user.email} </td>\r\n              <td>\r\n                {user.isAdmin ? (\r\n                  <i className=\"fa fa-check\" style={{ color: \"green\" }}></i>\r\n                ) : (\r\n                  <i className=\"fa fa-times\" style={{ color: \"red\" }}></i>\r\n                )}\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className={classes.button2}\r\n                  onClick={() => userDeleteHandler(user._id)}\r\n                >\r\n                  delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n      <br></br>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}